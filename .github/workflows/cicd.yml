name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Build with Maven
        run:
          ls -la .
          mvn clean package

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        working-directory: /home/runner/work/coinCalculator-backend/coinCalculator-backend
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
        run: |
          ls -la .
          TAG=$(git rev-parse --short HEAD)
          docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$TAG .
          docker push $DOCKER_USERNAME/$IMAGE_NAME:$TAG

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          docker pull $DOCKER_USERNAME/$IMAGE_NAME:$TAG
          docker stop $IMAGE_NAME || true
          docker rm $IMAGE_NAME || true
          docker run -d --name $IMAGE_NAME -p 8080:8080 $DOCKER_USERNAME/$IMAGE_NAME:$TAG
          EOF

